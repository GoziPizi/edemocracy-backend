{
  "openapi": "3.0.0",
  "info": {
    "title": "E-Democracy Swagger",
    "description": "Swagger for E-Democracy API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/api/users/": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create a new user",
        "parameters": [
          {
            "name": "body",
            "description": "User information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserCreateInputDtoDefinition"
            },
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "User created"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutputDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutputDefinition"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User id"
          },
          {
            "name": "body",
            "description": "User information",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UserUpdateInputDefinition"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutputDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutputDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/public": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get public user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicOutputDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicOutputDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/api/login/": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Endpoint to login",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "description": "password and email",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LoginPasswordDefinition"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/login/check": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Endpoint to check if token is valid",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "description": "token",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TokenDefinition"
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/topics/": {
      "post": {
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "get": {
        "tags": [
          "Topic"
        ],
        "summary": "Endpoint to get topics.",
        "description": "",
        "parameters": [
          {
            "name": "query",
            "page": 1,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Topics found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicOutputDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TopicOutputDefinition"
                }
              }
            }
          },
          "500": {
            "description": "An error occured"
          }
        }
      }
    },
    "/api/topics/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/topics/{id}/children": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserCreateInputDtoDefinition": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "string"
          },
          "password": {
            "type": "string",
            "example": "string"
          },
          "name": {
            "type": "string",
            "example": "string"
          },
          "address": {
            "type": "string",
            "example": "string"
          },
          "profession": {
            "type": "string",
            "example": "string"
          },
          "telephone": {
            "type": "string",
            "example": "string"
          },
          "firstName": {
            "type": "string",
            "example": "string"
          },
          "language": {
            "type": "string",
            "example": "string"
          },
          "affiliation": {
            "type": "string",
            "example": "DROITE"
          }
        },
        "xml": {
          "name": "UserCreateInputDtoDefinition"
        }
      },
      "UserOutputDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          },
          "email": {
            "type": "string",
            "example": "string"
          },
          "name": {
            "type": "string",
            "example": "string"
          },
          "address": {
            "type": "string",
            "example": "string"
          },
          "profession": {
            "type": "string",
            "example": "string"
          },
          "telephone": {
            "type": "string",
            "example": "string"
          },
          "firstName": {
            "type": "string",
            "example": "string"
          },
          "language": {
            "type": "string",
            "example": "string"
          },
          "affiliation": {
            "type": "string",
            "example": "DROITE"
          },
          "follows": {
            "type": "array",
            "example": [
              "1"
            ],
            "items": {
              "type": "string"
            }
          },
          "role": {
            "type": "string",
            "example": "USER"
          },
          "createdAt": {
            "type": "object",
            "properties": {}
          },
          "updatedAt": {
            "type": "object",
            "properties": {}
          }
        },
        "xml": {
          "name": "UserOutputDefinition"
        }
      },
      "UserPublicOutputDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "string"
          },
          "firstName": {
            "type": "string",
            "example": "string"
          },
          "language": {
            "type": "string",
            "example": "string"
          },
          "createdAt": {
            "type": "object",
            "properties": {}
          },
          "updatedAt": {
            "type": "object",
            "properties": {}
          }
        },
        "xml": {
          "name": "UserPublicOutputDefinition"
        }
      },
      "UserUpdateInputDefinition": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "string"
          },
          "name": {
            "type": "string",
            "example": "string"
          },
          "address": {
            "type": "string",
            "example": "string"
          },
          "profession": {
            "type": "string",
            "example": "string"
          },
          "telephone": {
            "type": "string",
            "example": "string"
          },
          "firstName": {
            "type": "string",
            "example": "string"
          },
          "language": {
            "type": "string",
            "example": "string"
          },
          "affiliation": {
            "type": "string",
            "example": "DROITE"
          }
        },
        "xml": {
          "name": "UserUpdateInputDefinition"
        }
      },
      "LoginPasswordDefinition": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "string"
          },
          "password": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "LoginPasswordDefinition"
        }
      },
      "TopicOutputDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          },
          "title": {
            "type": "string",
            "example": "string"
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "parentTopicId": {
            "type": "string",
            "example": "2"
          },
          "childrenId": {
            "type": "array",
            "example": [
              "1"
            ],
            "items": {
              "type": "string"
            }
          },
          "medias": {
            "type": "array",
            "example": [
              "https://www.google.com"
            ],
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "object",
            "properties": {}
          },
          "updatedAt": {
            "type": "object",
            "properties": {}
          }
        },
        "xml": {
          "name": "TopicOutputDefinition"
        }
      }
    }
  }
}